(ns mongol-drafts.main
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:adaptive_theme/adaptive_theme.dart" :as adaptive]
   [virtual-keyboard.input-control :as control]
   [virtual-keyboard.options :as keyboard-options]
   [cljd.flutter :as f]
   [mongol-drafts.services.electric :as db]
   [mongol-drafts.widgets.draft :as draft]
   [mongol-drafts.widgets.theme :as theme]
   [mongol-drafts.states.global :as global-state]))

(defn main []
  (m.WidgetsFlutterBinding/ensureInitialized)
  (let [window (-> m/WidgetsBinding .instance .-window)]
    (swap! global-state/state assoc :theme/brightness (.-platformBrightness window))
    (set!
     (.-onPlatformBrightnessChanged window)
     (fn []
      ;;  (dart:core/print (str "brightnes = " (.-platformBrightness window)))
       (swap! global-state/state assoc :theme/brightness (.-platformBrightness window)))))
       
  (control/set-control)

  (await
   (db/set-electric))

   (m/runApp
    (f/widget
     :context ctx
     :let [w  (-> m/MediaQuery (.of ctx) .-size .-width)
           info (merge keyboard-options/keyboard-option
                       {:keyboard/key-cap-border-radius 6
                        ;; :keyboard/key-container-color (-> m/Theme (.of ctx) .-colorScheme .-tertiaryContainer)
                        ;; :keyboard/action-keys-container-color (-> m/Theme (.of ctx) .-colorScheme .-tertiary)
                        ;; :keyboard/action-text-color (-> m/Theme (.of ctx) .-colorScheme .-surface)
                        ;; :keyboard/key-text-color (-> m/Theme (.of ctx) .-colorScheme .-surface)
                        ;; :keyboard/long-press-container-color (-> m/Theme (.of ctx) .-colorScheme .-tertiaryContainer)
                        }
                       {:keyboard/width w})]
     :watch [{brightness :theme/brightness} global-state/state]
     :bind {:info info :state (atom keyboard-options/keyboard-state)}
     (adaptive/AdaptiveTheme
      .light theme/default-light-theme
      .dark theme/default-dark-theme
      .initial adaptive.AdaptiveThemeMode/dark
      .builder
      (fn [theme dark-theme]
        (m/MaterialApp
         .title "Welcome to Flutter"
         .theme theme
         .darkTheme dark-theme
        ;;  .theme theme/default-light-theme
        ;;  .darkTheme theme/default-dark-theme
         .debugShowCheckedModeBanner false
         .home
         (draft/widget))
     )
    )
        )))
