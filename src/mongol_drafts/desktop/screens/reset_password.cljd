(ns mongol-drafts.desktop.screens.reset-password
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:mongol/mongol.dart" :as mgl]
   ["package:timer_button/timer_button.dart" :as tb]
   [cljd.flutter :as f]
   [mongol-drafts.services.auth :as auth-service]
   [mongol-drafts.desktop.widgets.auth :as auth-widget]
   [mongol-drafts.states.global :as gs]
   [mongol-drafts.utils.toast :as toast]))

(defn screen []
  (f/widget
   :context ctx
   :get {navigator m/Navigator
         {{primary-color .-primary} .-colorScheme} m/Theme}
   :managed [email-controller (m/TextEditingController)
             otp-controller (m/TextEditingController)
             password-controller (m/TextEditingController)]
   (m/Scaffold)
   .body
   (m/Padding
    .padding (m.EdgeInsets/only .top 40))
   (m/Center)
   (m/Container
    .width 400)
   (m/Padding
    .padding (.all m/EdgeInsets 20))
   (m/Column
    .children
    [(auth-widget/field email-controller "Email")
     (m/SizedBox .height 25)
     (tb/TimerButton 
      .label "Send OTP Email"
      .timeOutInSeconds 60
      .timeUpFlag true
      .onPressed (fn [] 
                   (auth-service/send-otp
                    ctx {"email" (.-text email-controller)}
                    (fn [x]
                      (swap! gs/state assoc :otp-key (get x "otp_key"))
                      (toast/show-toast ctx "Send OTP success!")))))
     (m/SizedBox .height 25)
     (auth-widget/field  otp-controller "OTP")
     (m/SizedBox .height 25)
     (auth-widget/field  password-controller "Password")
     (m/SizedBox .height 40)
     (f/widget
      (m/Container .height 100)
      (m/Row
       .children
       [(m/GestureDetector
         .onTap (fn []
                  (.pushNamed navigator "/login")
                  nil)
         .child
         (mgl/MongolRichText
          .text (m/TextSpan
                 .text "Already have an account?"
                 .style (m/TextStyle .fontSize 16)
                 .children [(m/TextSpan .text " Login"
                                        .style (m/TextStyle .color primary-color
                                                            .fontSize 16))])))
        (auth-widget/rounded-button (fn [] (auth-service/reset-password
                                            ctx
                                            {"email" (.-text email-controller)
                                             "otp_value" (.-text otp-controller)
                                             "otp_key" (get @gs/state :otp-key)
                                             "password" (.-text password-controller)}
                                            (fn [x]
                                              (.pushNamed navigator "/login")
                                              (toast/show-toast ctx "Reset Password Success!")
                                              nil)))
                                    "Done")]))])))