(ns mongol-drafts.widgets.list
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:mongol/mongol.dart" :as mgl]
   ["package:flutter_slidable/flutter_slidable.dart" :as slidable]
   [cljd.flutter :as f]
   [mongol-drafts.widgets.empty :as empty-content]
   [mongol-drafts.states.global :as global-state]
   [mongol-drafts.states.draft :as draft-state]
   [mongol-drafts.states.tag :as tag-state]))

(defn widget []
  (f/widget
   :context ctx
   :get [m/Navigator :text-controller]
   :let [h (-> m/MediaQuery (.of ctx) .-size .-height)]
   :watch [{{contents :contents} :drafts} global-state/state]
   (if (empty? contents)
     (empty-content/empty-content-view)
     (m.ListView/separated
      .separatorBuilder (fn [_ i] (m/VerticalDivider .width 1))
      .scrollDirection m.Axis/horizontal
      .padding (.fromLTRB m/EdgeInsets 20 20 8 8)
      .itemCount (count contents)
      .itemBuilder
      (fn [^m/BuildContext context i]
        (f/widget
         (m/GestureDetector
          .onTap (fn []
                   (draft-state/set-current-draft text-controller (-> contents (nth i) (get "id")))
                   (if (true? (:show-search-diaglog @global-state/state))
                     (do
                       (swap! global-state/state assoc :show-search-diaglog false)
                       (swap! global-state/state assoc :show-stacked-keyboard false))
                     (.pop navigator))
                   (draft-state/focus-on-draft)
                   (tag-state/get-draft-tags global-state/state (-> contents (nth i) (get "id")))))
         (slidable/Slidable
          .key (m/ValueKey i)
          .direction m/Axis.vertical
          .endActionPane
          (slidable/ActionPane
           .motion (slidable/BehindMotion)
           .dismissible (slidable/DismissiblePane
                         .onDismissed
                         (fn []
                           (dart:core/print "slide")))
           .children
           [(if-not (= 3 (:draft/tabbar-index @global-state/state))
              (slidable/SlidableAction .onPressed
                                       (fn [_]
                                         (draft-state/toggle-drafts-item-flag i))
                                       .backgroundColor (.green m/Colors)
                                       .foregroundColor (.white m/Colors)
                                       .padding (m.EdgeInsets/all 0)
                                       .icon (.flag m/Icons)
                                       .label nil)
              (m/Container))
            (if (some #{(:draft/tabbar-index @global-state/state)} [2 3])
              (slidable/SlidableAction .onPressed
                                       (fn [_]
                                         (draft-state/inbox-draft i)
                                         (dart:core/print "slide inbox111"))
                                       .backgroundColor (.blue m/Colors)
                                       .foregroundColor (.white m/Colors)
                                       .padding (m.EdgeInsets/all 0)
                                       .icon (.inbox_outlined m/Icons))
              (m/Container))
            (if (not= (:draft/tabbar-index @global-state/state) 3)
              (slidable/SlidableAction .onPressed
                                       (fn [context]
                                         (draft-state/recycle-draft i)
                                         (dart:core/print "slide delete"))
                                       .backgroundColor (.red m/Colors)
                                       .foregroundColor (.white m/Colors)
                                       .padding (m.EdgeInsets/all 0)
                                       .icon (.delete m/Icons))
              (m/Container))

            (if (some #{(:draft/tabbar-index @global-state/state)} [0 1])
              (slidable/SlidableAction .onPressed
                                       (fn [_]
                                         (draft-state/archive-draft i)
                                         (dart:core/print "slide archive"))
                                       .backgroundColor (.blue m/Colors)
                                       .foregroundColor (.white m/Colors)
                                       .padding (m.EdgeInsets/all 0)
                                       .icon (.archive m/Icons))
              (m/Container))
            (if (= (:draft/tabbar-index @global-state/state) 3)
              (slidable/SlidableAction .onPressed
                                       (fn [_]
                                         (draft-state/delete-draft i)
                                         (dart:core/print "slide archive"))
                                       .backgroundColor (.red m/Colors)
                                       .foregroundColor (.white m/Colors)
                                       .padding (m.EdgeInsets/all 0)
                                       .icon (.delete_forever m/Icons))
              (m/Container))]))
         (m/Container
          .height (- h 40)
          .constraints
          (m/BoxConstraints
           .minWidth 50))
         (m/Padding
          .padding (.only m/EdgeInsets .left 10 .right 10))
         (m/Column
          .mainAxisAlignment m.MainAxisAlignment/spaceBetween
          .children
          [(if (empty? (-> contents (nth i) (get "content")))
             (mgl/MongolText
              "--blank--")
             (let [^String orig-content (-> contents (nth i) (get "content"))
                   ^String content (.trim orig-content)]
               (mgl/MongolText content .maxLines 1)))
           (if (true? (-> contents (nth i) (get "flag")))
             (m/Icon (.flag m/Icons)
                     .size 12
                     .color m.Colors/red)
             (m/Container))])))))))

